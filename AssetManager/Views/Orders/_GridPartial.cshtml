@using AssetManager.ViewModels
@using AssetManager.Enums

@model OrderGridViewModel

<div id="gridWrapper" class="h-100 mt-1 d-flex flex-column">
    <div class="table-responsive border rounded ps-1 pe-1 flex-grow-1">
        <table class="table table-striped table-sm mb-1">
            <thead>
                <tr>
                    <th scope="col" style="width:3%">ID</th>
                    <th scope="col" style="width:11%">External Order ID</th>
                    <th scope="col" style="width:8%">Vendor</th>
                    <th scope="col" style="width:20%">Products</th>
                    <th scope="col" style="width:6%">Cost</th>
                    <th scope="col" style="width:9%">Purchaser</th>
                    <th scope="col" style="width:9%">Approver</th>
                    <th scope="col" style="width:14%">Approved</th>
                    <th scope="col" style="width:14%">Received</th>
                    <th scope="col" style="width:6%" >Options</th>
                </tr>
            </thead>
            <tbody>
                @{
                    foreach (var o in Model.Orders)
                    {
                        <tr data-id="@o.OrderId.ToString()">
                            <td class="align-middle">@o.OrderId</td>
                            <td class="align-middle">@o.ExternalOrderId</td>
                            <td class="align-middle">@o.Vendor</td>
                            <td class="align-middle">
                                @{
                                    if (o.Products != null && o.Products.Any())
                                    {
                                        <ul style="margin-bottom: 0px;">
                                            @{
                                                foreach (var p in o.Products)
                                                {
                                                    <li>@($"{p.Count.ToString()}X - {p.Product.DisplayName}")</li>
                                                }
                                            }
                                        </ul>
                                    }
                                }
                            </td>
                            <td class="align-middle">@o.Cost.ToString("C2")</td>
                            <td class="align-middle">@o.PurchaserName</td>
                            <td class="align-middle">@o.ApproverName</td>
                            <td class="align-middle">@o.ApprovedDttm?.ToString("g")</td>
                            <td class="align-middle">@o.ReceivedDttm?.ToString("g")</td>
                            <td class="align-middle">
                                <div class="dropdown">
                                    <i class="fa-solid fa-ellipsis" type="button" id="orderDropdown" data-bs-toggle="dropdown" aria-expanded="false" style="margin-left: 20px;"></i>
                                    <ul class="dropdown-menu" aria-labelledby="orderDropdown">
                                        @{
                                            if (o.ReceivedDttm == null)
                                            {
                                                <li><button class="dropdown-item" type="button" onclick="addEditOrder(@o.OrderId)">Edit</button></li>
                                                <li><button class="dropdown-item" type="button" onclick="confirmReceive(@o.OrderId)">Mark Received</button></li>
                                            }
                                            else
                                            {
                                                <li><button class="dropdown-item" type="button" onclick="addEditOrder(@o.OrderId)" disabled>Edit</button></li>
                                                <li><button class="dropdown-item" type="button" onclick="confirmReceive(@o.OrderId)" disabled>Mark Received</button></li>
                                            }
                                        }
                                        <li><button class="dropdown-item" type="button" onclick="confirmDelete(@o.OrderId)">Delete</button></li>
                                    </ul>
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    <nav aria-label="Person Navigation" class="mt-1">
        <ul class="pagination justify-content-end">

            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : String.Empty)" data-page="@(Model.CurrentPage-1)" onclick="getGridPageRelative(this)">
                <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
            </li>
            @{
                for (var i = 0; i < Model.PageCount; i++)
                {
                    <li class="page-item @((i + 1) == Model.CurrentPage ? "active" : String.Empty)" data-page="@(i + 1)" onclick="getGridPageAbsolute(this)"><a class="page-link" href="#">@(i + 1)</a></li>
                }
            }
            <li id="nextPageButton" class="page-item @(Model.CurrentPage == Model.PageCount ? "disabled" : String.Empty)" data-page="@(Model.CurrentPage+1)" onclick="getGridPageRelative(this)">
                <a class="page-link" href="#">Next</a>
            </li>
        </ul>
    </nav>
</div>