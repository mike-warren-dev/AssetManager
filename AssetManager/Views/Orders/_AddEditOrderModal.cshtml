@using AssetManager.Models;
@using AssetManager.DTOs;
@using AssetManager.Enums;

@model OrderAddEditDto

<div>
    @using (Html.BeginForm("AddEdit", "Orders"))
    {
        @Html.AntiForgeryToken()
        
        <div class="modal-header">
            <h5 class="modal-title">Add Order</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
            <div class="row">
                <div class="col-6">

                    <input asp-for="OrderId" type="hidden">

                    <label asp-for="ExternalOrderId">External Order ID</label><span style="color:red">*</span>
                    <input asp-for="ExternalOrderId" class="form-control" />
                    <div style="min-height:15px">
                        <span asp-validation-for="ExternalOrderId" class="text-danger small"></span>
                    </div>

                    <label asp-for="VendorId">Vendor</label><span style="color:red">*</span>
                    <select asp-for="VendorId" class="form-select"
                        asp-items="Html.GetEnumSelectList<Vendor>()">
                        <option disabled selected class="text-muted">select</option>
                    </select>
                    <div style="min-height:15px">
                        <span asp-validation-for="VendorId" class="text-danger small"></span>
                    </div>

                    <label asp-for="Cost">Cost</label>
                    <input asp-for="Cost" class="form-control" />
                    <div style="min-height:15px">
                        <span asp-validation-for="Cost" class="text-danger small"></span>
                    </div>

                    <label asp-for="PurchaserId">Purchaser</label>
                    <input asp-for="PurchaserId" class="form-control" />
                    <div style="min-height:15px">
                        <span asp-validation-for="PurchaserId" class="text-danger small"></span>
                    </div>

                    <label asp-for="ApproverId">Approver</label>
                    <input asp-for="ApproverId" class="form-control" />
                    <div style="min-height:15px">
                        <span asp-validation-for="ApproverId" class="text-danger small"></span>
                    </div>

                    <label asp-for="ApprovedDttm">Approved</label>
                    <input asp-for="ApprovedDttm" class="form-control" type="datetime-local" />
                    <div style="min-height:15px">
                        <span asp-validation-for="ApprovedDttm" class="text-danger small"></span>
                    </div>

                </div>
                <div class="col-6">
                    <container id="productsContainer">
                        @{
                            if (Model.Products != null)
                            {
                                for (var i = 0; i < Model.Products.Count; i++)
                                {
                                    <div class="row">
                                        <div class="col-8">
                                            <label asp-for="@Model.Products[i].Product">Product</label>
                                            <select asp-for="@Model.Products[i].Product" class="form-select" asp-items="Html.GetEnumSelectList<Product>()">
                                                <option disabled selected class="text-muted">select</option>
                                            </select>
                                            <div style="min-height:15px">
                                                <span asp-validation-for="@Model.Products[i].Product" class="text-danger small"></span>
                                            </div>
                                        </div>

                                        <div class="col-4">
                                            <label asp-for="@Model.Products[i].Count">Count</label>
                                            <input asp-for="@Model.Products[i].Count" class="form-control" />
                                            <div style="min-height:15px">
                                                <span asp-validation-for="@Model.Products[i].Count" class="text-danger small"></span>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        }    
                    </container>
                    <button id="addFieldsButton" type="button" class="btn btn-sm btn-primary" style="width:100%;" onclick="addProductFields()">+</button>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button id="saveNewOrder" type="submit" class="btn btn-primary">Save</button>
        </div>
    }
</div>

<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>

<script>
    function addProductFields(){
        var nextIndex = $("#productsContainer .row").length;
        var $field = $(`<div class="row"><div class="col-8"><label for="Products_${nextIndex}__Product">Product</label> <select class="form-select" data-val="true" data-val-required="The Product field is required." id="Products_${nextIndex}__Product" name="Products[${nextIndex}].Product"></select><div style="min-height:15px"><span> </span></div></div><div class="col-4"><label for="Products_${nextIndex}__Count">Count</label><input class="form-control" type="number" data-val="true" data-val-required="The Count field is required." id="Products_${nextIndex}__Count" name="Products[${nextIndex}].Count"><div style="min-height:15px"><span> </span></div></div></div>`);

        $("#productsContainer").append($field);
        $("#Products_0__Product option").clone().appendTo(`#Products_${nextIndex}__Product`);
    }
</script>