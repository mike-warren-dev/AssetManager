@using AssetManager.ViewModels

@model PersonGridViewModel

<div id="gridWrapper" class="table-responsive">
    <table class="table table-striped table-sm">
        <thead>
            <tr>
                <th scope="col">People ID</th>
                <th scope="col">First Name</th>
                <th scope="col">Last Name</th>
                <th scope="col">Email Address</th>
                <th scope="col">Options</th>
            </tr>
        </thead>
        <tbody>
            @{
                foreach (var p in Model.People)
                {
                    <tr data-id="@p.PersonId.ToString()">
                        <td class="align-middle">@p.PersonId</td>
                        <td class="align-middle">@p.FirstName</td>
                        <td class="align-middle">@p.LastName</td>
                        <td class="align-middle">@p.Email</td>
                        <td class="align-middle">
                            <div class="dropdown">
                                <button class="btn btn-secondary" type="button" id="personDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fa-solid fa-bars"></i>
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="personDropdown">
                                    <li><button class="dropdown-item" type="button" onclick="addEditPerson(@p.PersonId)">Edit</button></li>
                                    <li><button class="dropdown-item" type="button" onclick="confirmDelete(@p.PersonId)">Delete</button></li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <nav aria-label="Person Navigation">
        <ul class="pagination justify-content-end">

            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : String.Empty)" data-page="@(Model.CurrentPage-1)" onclick="getGridPageRelative(this)">
                <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
            </li>
            @{
                for (var i = 0; i < Model.PageCount; i++)
                {
                    <li class="page-item @((i + 1) == Model.CurrentPage ? "active" : String.Empty)" data-page="@(i + 1)" onclick="getGridPageAbsolute(this)"><a class="page-link" href="#">@(i + 1)</a></li>
                }
            }
            <li class="page-item @(Model.CurrentPage == Model.PageCount ? "disabled" : String.Empty)" data-page="@(Model.CurrentPage+1)" onclick="getGridPageRelative(this)">
                <a class="page-link" href="#">Next</a>
            </li>
        </ul>
    </nav>
</div>